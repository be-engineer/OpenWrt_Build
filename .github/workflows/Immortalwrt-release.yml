name: Immortalwrt release

on:
  workflow_dispatch:
  
env:
  TZ: Asia/Shanghai
  
jobs:

  build:
    
    runs-on: ubuntu-22.04
    if: github.repository_owner_id == github.event.sender.id || github.event_name == 'schedule'
    
    steps:
      
      - name: Show system
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          cpu_name=$(cat /proc/cpuinfo | grep "model name" | head -n 1 | awk -F: '{print $2}' | sed 's/^[ \t]*//')
          if [[ "$cpu_name" =~ "8370C" || "$cpu_name" =~ "7763" ]]; then
            echo "CPU为8370C或7763，继续执行命令"
            ulimit -a
          else
            echo "CPU不为8370C或7763，性能不足，停止执行命令"
            exit 1
          fi
          
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          swap-size-mb: 512
          temp-reserve-mb: 128
          root-reserve-mb: 3072
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
        

      - name: Init build dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          df -h
          sudo swapoff -a
          sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install aria2
          sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
          sudo -E chmod -R 755 /usr/local/sbin/apt-fast
          sudo -E apt-fast -y -qq install dwarves quilt llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig libfuse-dev coreutils vim nano python3 python3-dev python3-pip python3-ply python3-pyelftools lrzsz scons
          pip3 install --user -U pylibfdt
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
          sudo -E git config --global core.abbrev auto
          df -h
          
      - name: Prepare Sources
        id: prepare
        run: |
          pwd
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir          
          pwd
          ls
          latest_release="$(curl -s https://github.com/immortalwrt/immortalwrt/tags | grep -Eo "v[0-9\.]+\-*r*c*[0-9]*.tar.gz" | sed -n '/[2-9][0-9]/p' | sed -n 1p | sed 's/.tar.gz//g')"
          git clone -b ${latest_release} --depth 1 https://github.com/immortalwrt/immortalwrt.git openwrt
          echo "latest_release=${latest_release}" >>$GITHUB_ENV
      - name: Prepare Package
        run: |
          pwd
          cd openwrt
          pwd
          cp -f ../SCRIPTS/prepare_package.sh ./prepare_package.sh
          /bin/bash prepare_package.sh
      - name: Make Config
        run: |
          cd openwrt
          mv ../SEED/config-release.seed .config
          sed -i '/CONFIG_TARGET_ROOTFS_SQUASHFS/d' .config
          make defconfig
      - name: Make Download
        run: |
          df -h
          cd openwrt
          make download -j8
      - name: Compile Openwrt
        id: compileopenwrt
        continue-on-error: true
        run: |
          df -h
          cd openwrt
          make -j$(($(nproc) + 1)) || make -j$(($(nproc) + 1)) V=s
          echo $?
      - name: If Error
        if: steps.compileopenwrt.outcome == 'failure'
        run: |
          cat openwrt/.config
          echo '================================================================'
          cd openwrt && make -j1 V=s
      - name: Print Disk Space After
        run: df -h
      - name: Organize files
        id: organize
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv openwrt/bin/targets/x86/64/*combined-efi.img* ./artifact/
          cd ./artifact/
          ls -Ahl
          gzip -d *.gz && exit 0
          gzip --best *.img
          ls -Ahl
          releaseTag=${{ env.latest_release }}
          sha256sum openwrt*x86* | tee X86-OpenWrt-$(date +%Y-%m-%d)-${{ env.latest_release }}.sha256sum
          zip X86-OpenWrt-$(date +%Y-%m-%d)-${{ env.latest_release }}-ext4.zip *ext4-combined*
          zip X86-OpenWrt-$(date +%Y-%m-%d)-${{ env.latest_release }}-sfs.zip *squashfs-combined*
          cd ../openwrt
          cp .config ../artifact/config-full.seed
          ./scripts/diffconfig.sh > ../artifact/config-diff.seed
          ls -Ahl
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: OpenWRT-${{ env.release_tag }}-artifact
          path: ./artifact/
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1.12.0
        with:
          name: OpenWRT-${{ env.release_tag }}-ROM
          allowUpdates: true
          prerelease: false
          tag: ${{ env.release_tag }}
          commit: master
          replacesArtifacts: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ./artifact/*.zip,./artifact/*.seed,./artifact/*.sha256sum
          
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
            retain_days: 1
            keep_minimum_runs: 1
  
