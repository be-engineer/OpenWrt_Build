name: Immortalwrt release

on:
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-22.04
    if: github.repository_owner_id == github.event.sender.id || github.event_name == 'schedule'

    steps:

      - name: Checkout
        uses: actions/checkout@main
      - name: Show system
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          ulimit -a
      - name: Init build dependencies
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
        sudo docker image prune -a -f
        sudo systemctl stop docker
        
        sudo apt-get -y purge firefox clang* ghc* google* llvm* mono* mongo* mysql* php*
        sudo apt-get -y autoremove --purge
        sudo apt-get clean
        
        rm -rf ~/{.cargo,.dotnet,.rustup}
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo sh -c 'echo "deb http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
        sudo sh -c 'echo "deb-src http://apt.llvm.org/focal/ llvm-toolchain-focal-13 main" >> /etc/apt/sources.list'
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -

        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)

        sudo apt update -y
        sudo apt full-upgrade -y
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache clang-13 cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
          g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
          libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5 \
          libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lld llvm-13 lrzsz mkisofs msmtp \
          nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip python3-ply \
          python-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig \
          texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

      - name: Prepare Sources
        id: prepare
        run: |
          sudo chown -R runner:runner /home/runner/work/OpenWrt_Build
          latest_release="$(curl -s https://github.com/immortalwrt/immortalwrt/tags | grep -Eo "v[0-9\.]+\-*r*c*[0-9]*.tar.gz" | sed -n '/[2-9][0-9]/p' | sed -n 1p | sed 's/.tar.gz//g')"
          git clone -b ${latest_release} --depth 1 https://github.com/immortalwrt/immortalwrt.git openwrt
          echo "latest_release=${latest_release}" >>$GITHUB_ENV
      - name: Prepare Package
        run: |
          cd openwrt
          cp -f ../SCRIPTS/prepare_package.sh ./prepare_package.sh
          /bin/bash prepare_package.sh
      - name: Make Config
        run: |
          cd openwrt
          mv ../SEED/config-release.seed .config
          sed -i '/CONFIG_TARGET_ROOTFS_SQUASHFS/d' .config
          make defconfig
      - name: Make Download
        run: |
          df -h
          cd openwrt
          make download -j50
      - name: Compile Openwrt
        id: compileopenwrt
        continue-on-error: true
        run: |
          df -h
          cd openwrt
          make -j$(($(nproc) + 1)) || make -j$(($(nproc) + 1)) V=s
          echo $?
      - name: If Error
        if: steps.compileopenwrt.outcome == 'failure'
        run: |
          cat openwrt/.config
          echo '================================================================'
          cd openwrt && make -j1 V=s
      - name: Print Disk Space After
        run: df -h
      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv openwrt/bin/targets/x86/64/*combined-efi.img* ./artifact/
          cd ./artifact/
          ls -Ahl
          gzip -d *.gz && exit 0
          gzip --best *.img
          ls -Ahl
          releaseTag=${{ env.latest_release }}
          sha256sum openwrt*x86* | tee X86-OpenWrt-$(date +%Y-%m-%d)-${{ env.latest_release }}.sha256sum
          zip X86-OpenWrt-$(date +%Y-%m-%d)-${{ env.latest_release }}-ext4.zip *ext4-combined*
          zip X86-OpenWrt-$(date +%Y-%m-%d)-${{ env.latest_release }}-sfs.zip *squashfs-combined*
          cd ../openwrt
          cp .config ../artifact/config-full.seed
          ./scripts/diffconfig.sh > ../artifact/config-diff.seed
          release_tag="OpenWrt-$releaseTag-$(date +%Y-%m-%d)"
          echo "release_tag=${release_tag}" >>$GITHUB_ENV
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: ${{ env.release_tag }}-artifact
          path: ./artifact/
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@main
        with:
          name: ${{ env.release_tag }}-ROM
          allowUpdates: true
          tag: ${{ env.release_tag }}
          commit: master
          replacesArtifacts: true
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ./artifact/*.gz,./artifact/*.seed,./artifact/*.sha256sum
